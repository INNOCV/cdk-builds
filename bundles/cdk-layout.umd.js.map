{"version":3,"file":"cdk-layout.umd.js","sources":["../../src/cdk/layout/index.ts","../../src/cdk/layout/public_api.ts","../../src/cdk/layout/breakpoints.ts","../../src/cdk/layout/breakpoints-observer.ts","../../src/cdk/layout/media-matcher.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {LayoutModule,BreakpointObserver,BreakpointState,Breakpoints,MediaMatcher} from './public_api';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {BreakpointObserver} from './breakpoints-observer';\nimport {MediaMatcher} from './media-matcher';\nexport class LayoutModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [BreakpointObserver, MediaMatcher],\n  imports: [PlatformModule],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction LayoutModule_tsickle_Closure_declarations() {\n/** @type {?} */\nLayoutModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLayoutModule.ctorParameters;\n}\n\n\nexport {BreakpointObserver, BreakpointState} from './breakpoints-observer';\nexport {Breakpoints} from './breakpoints';\nexport {MediaMatcher} from './media-matcher';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nexport const /** @type {?} */ Breakpoints = {\n  Handset: '(max-width: 599px) and (orientation: portrait), ' +\n           '(max-width: 959px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' +\n          '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' +\n       '(min-width: 1280px) and (orientation: landscape)',\n\n  HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n\n  HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, NgZone, OnDestroy} from '@angular/core';\nimport {MediaMatcher} from './media-matcher';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {RxChain, map, startWith, takeUntil} from '@angular/cdk/rxjs';\nimport {coerceArray} from '@angular/cdk/coercion';\nimport {combineLatest} from 'rxjs/observable/combineLatest';\nimport {fromEventPattern} from 'rxjs/observable/fromEventPattern';\n\n/** The current state of a layout breakpoint. */\nexport interface BreakpointState {\n  matches: boolean;\n}\n\ninterface Query {\n  observable: Observable<BreakpointState>;\n  mql: MediaQueryList;\n}\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nexport class BreakpointObserver implements OnDestroy {\n/**\n * A map of all media queries currently being listened for.\n */\nprivate _queries: Map<string, Query> = new Map();\n/**\n * A subject for all other observables to takeUntil based on.\n */\nprivate _destroySubject: Subject<{}> = new Subject();\n/**\n * @param {?} mediaMatcher\n * @param {?} zone\n */\nconstructor(private mediaMatcher: MediaMatcher,\nprivate zone: NgZone) {}\n/**\n * Completes the active subject, signalling to all other observables to complete.\n * @return {?}\n */\nngOnDestroy() {\n    this._destroySubject.next();\n    this._destroySubject.complete();\n  }\n/**\n * Whether the query currently is matched.\n * @param {?} value\n * @return {?}\n */\nisMatched(value: string | string[]): boolean {\n    let /** @type {?} */ queries = coerceArray(value);\n    return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n  }\n/**\n * Gets an observable of results for the given queries that will emit new results for any changes\n * in matching of the given queries.\n * @param {?} value\n * @return {?}\n */\nobserve(value: string | string[]): Observable<BreakpointState> {\n    let /** @type {?} */ queries = coerceArray(value);\n    let /** @type {?} */ observables = queries.map(query => this._registerQuery(query).observable);\n\n    return combineLatest(observables, (a: BreakpointState, b: BreakpointState) => {\n      return {\n        matches: !!((a && a.matches) || (b && b.matches)),\n      };\n    });\n  }\n/**\n * Registers a specific query to be listened for.\n * @param {?} query\n * @return {?}\n */\nprivate _registerQuery(query: string): Query {\n    // Only set up a new MediaQueryList if it is not already being listened for.\n    if (this._queries.has(query)) {\n      return /** @type {?} */(( this._queries.get(query)));\n    }\n\n    let /** @type {?} */ mql: MediaQueryList = this.mediaMatcher.matchMedia(query);\n    // Create callback for match changes and add it is as a listener.\n    let /** @type {?} */ queryObservable = RxChain.from(fromEventPattern(\n      // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n      // back into the zone because matchMedia is only included in Zone.js by loading the\n      // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n      // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n      // patches it.\n      (listener: MediaQueryListListener) => {\n        mql.addListener((e: MediaQueryList) => this.zone.run(() => listener(e)));\n      },\n      (listener: MediaQueryListListener) => {\n        mql.removeListener((e: MediaQueryList) => this.zone.run(() => listener(e)));\n      }))\n      .call(takeUntil, this._destroySubject)\n      .call(startWith, mql)\n      .call(map, (nextMql: MediaQueryList) => ({matches: nextMql.matches}))\n      .result();\n\n    // Add the MediaQueryList to the set of queries.\n    let /** @type {?} */ output = {observable: queryObservable, mql: mql};\n    this._queries.set(query, output);\n    return output;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaMatcher, },\n{type: NgZone, },\n];\n}\n\nfunction BreakpointObserver_tsickle_Closure_declarations() {\n/** @type {?} */\nBreakpointObserver.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBreakpointObserver.ctorParameters;\n/**\n * A map of all media queries currently being listened for.\n * @type {?}\n */\nBreakpointObserver.prototype._queries;\n/**\n * A subject for all other observables to takeUntil based on.\n * @type {?}\n */\nBreakpointObserver.prototype._destroySubject;\n/** @type {?} */\nBreakpointObserver.prototype.mediaMatcher;\n/** @type {?} */\nBreakpointObserver.prototype.zone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\n/**\n * Global registry for all dynamically-created, injected style tags.\n */\nconst styleElementForWebkitCompatibility: Map<string, HTMLStyleElement> = new Map();\n/**\n * A utility for calling matchMedia queries.\n */\nexport class MediaMatcher {\n/**\n * The internal matchMedia method to return back a MediaQueryList like object.\n */\nprivate _matchMedia: (query: string) => MediaQueryList;\n/**\n * @param {?} platform\n */\nconstructor(private platform: Platform) {\n    this._matchMedia = this.platform.isBrowser ?\n      // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n      // call it from a different scope.\n      window.matchMedia.bind(window) :\n      noopMatchMedia;\n  }\n/**\n * Confirms the layout engine will trigger for the selector query provided and returns the\n * MediaQueryList for the query provided.\n * @param {?} query\n * @return {?}\n */\nmatchMedia(query: string): MediaQueryList {\n    if (this.platform.WEBKIT) {\n      createEmptyStyleRule(query);\n    }\n    return this._matchMedia(query);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Platform, },\n];\n}\n\nfunction MediaMatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nMediaMatcher.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMediaMatcher.ctorParameters;\n/**\n * The internal matchMedia method to return back a MediaQueryList like object.\n * @type {?}\n */\nMediaMatcher.prototype._matchMedia;\n/** @type {?} */\nMediaMatcher.prototype.platform;\n}\n\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when there is at least one CSS\n * selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query: string) {\n  if (!styleElementForWebkitCompatibility.has(query)) {\n    try {\n      const /** @type {?} */ style = document.createElement('style');\n\n      style.setAttribute('type', 'text/css');\n      if (!style.sheet) {\n        const /** @type {?} */ cssText = `@media ${query} {.fx-query-test{ }}`;\n        style.appendChild(document.createTextNode(cssText));\n      }\n\n      document.getElementsByTagName('head')[0].appendChild(style);\n\n      // Store in private global registry\n      styleElementForWebkitCompatibility.set(query, style);\n    } catch ( /** @type {?} */e) {\n      console.error(e);\n    }\n  }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query: string): MediaQueryList {\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {},\n    removeListener: () => {}\n  };\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","NgZone","startWith","takeUntil","combineLatest","coerceArray","Platform","Injectable"],"mappings":"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"}